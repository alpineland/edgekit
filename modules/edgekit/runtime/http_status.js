// copied from https://deno.land/std/http/http_status.ts
// defined each code as a variable to enable tree shaking.

/** Standard HTTP status codes. */

/** RFC 7231, 6.2.1 */
export const Continue = 100;
/** RFC 7231, 6.2.2 */
export const SwitchingProtocols = 101;
/** RFC 2518, 10.1 */
export const Processing = 102;
/** RFC 8297 **/
export const EarlyHints = 103;

/** RFC 7231, 6.3.1 */
export const OK = 200;
/** RFC 7231, 6.3.2 */
export const Created = 201;
/** RFC 7231, 6.3.3 */
export const Accepted = 202;
/** RFC 7231, 6.3.4 */
export const NonAuthoritativeInfo = 203;
/** RFC 7231, 6.3.5 */
export const NoContent = 204;
/** RFC 7231, 6.3.6 */
export const ResetContent = 205;
/** RFC 7233, 4.1 */
export const PartialContent = 206;
/** RFC 4918, 11.1 */
export const MultiStatus = 207;
/** RFC 5842, 7.1 */
export const AlreadyReported = 208;
/** RFC 3229, 10.4.1 */
export const IMUsed = 226;

/** RFC 7231, 6.4.1 */
export const MultipleChoices = 300;
/** RFC 7231, 6.4.2 */
export const MovedPermanently = 301;
/** RFC 7231, 6.4.3 */
export const Found = 302;
/** RFC 7231, 6.4.4 */
export const SeeOther = 303;
/** RFC 7232, 4.1 */
export const NotModified = 304;
/** RFC 7231, 6.4.5 */
export const UseProxy = 305;
/** RFC 7231, 6.4.7 */
export const TemporaryRedirect = 307;
/** RFC 7538, 3 */
export const PermanentRedirect = 308;

/** RFC 7231, 6.5.1 */
export const BadRequest = 400;
/** RFC 7235, 3.1 */
export const Unauthorized = 401;
/** RFC 7231, 6.5.2 */
export const PaymentRequired = 402;
/** RFC 7231, 6.5.3 */
export const Forbidden = 403;
/** RFC 7231, 6.5.4 */
export const NotFound = 404;
/** RFC 7231, 6.5.5 */
export const MethodNotAllowed = 405;
/** RFC 7231, 6.5.6 */
export const NotAcceptable = 406;
/** RFC 7235, 3.2 */
export const ProxyAuthRequired = 407;
/** RFC 7231, 6.5.7 */
export const RequestTimeout = 408;
/** RFC 7231, 6.5.8 */
export const Conflict = 409;
/** RFC 7231, 6.5.9 */
export const Gone = 410;
/** RFC 7231, 6.5.10 */
export const LengthRequired = 411;
/** RFC 7232, 4.2 */
export const PreconditionFailed = 412;
/** RFC 7231, 6.5.11 */
export const RequestEntityTooLarge = 413;
/** RFC 7231, 6.5.12 */
export const RequestURITooLong = 414;
/** RFC 7231, 6.5.13 */
export const UnsupportedMediaType = 415;
/** RFC 7233, 4.4 */
export const RequestedRangeNotSatisfiable = 416;
/** RFC 7231, 6.5.14 */
export const ExpectationFailed = 417;
/** RFC 7168, 2.3.3 */
export const Teapot = 418;
/** RFC 7540, 9.1.2 */
export const MisdirectedRequest = 421;
/** RFC 4918, 11.2 */
export const UnprocessableEntity = 422;
/** RFC 4918, 11.3 */
export const Locked = 423;
/** RFC 4918, 11.4 */
export const FailedDependency = 424;
/** RFC 8470, 5.2 */
export const TooEarly = 425;
/** RFC 7231, 6.5.15 */
export const UpgradeRequired = 426;
/** RFC 6585, 3 */
export const PreconditionRequired = 428;
/** RFC 6585, 4 */
export const TooManyRequests = 429;
/** RFC 6585, 5 */
export const RequestHeaderFieldsTooLarge = 431;
/** RFC 7725, 3 */
export const UnavailableForLegalReasons = 451;

/** RFC 7231, 6.6.1 */
export const InternalServerError = 500;
/** RFC 7231, 6.6.2 */
export const NotImplemented = 501;
/** RFC 7231, 6.6.3 */
export const BadGateway = 502;
/** RFC 7231, 6.6.4 */
export const ServiceUnavailable = 503;
/** RFC 7231, 6.6.5 */
export const GatewayTimeout = 504;
/** RFC 7231, 6.6.6 */
export const HTTPVersionNotSupported = 505;
/** RFC 2295, 8.1 */
export const VariantAlsoNegotiates = 506;
/** RFC 4918, 11.5 */
export const InsufficientStorage = 507;
/** RFC 5842, 7.2 */
export const LoopDetected = 508;
/** RFC 2774, 7 */
export const NotExtended = 510;
/** RFC 6585, 6 */
export const NetworkAuthenticationRequired = 511;
